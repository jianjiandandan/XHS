/**
 * Created by coatu on 2017/10/11.
 */
import React, {Component} from 'react';
import{
    StyleSheet,
    Text,
    View,
    Image,
    TouchableHighlight,
    Dimensions,
    TextInput,
    TouchableOpacity
} from 'react-native';

import {Drawer, Button} from 'teaset'
import {observer} from 'mobx-react'
import Store from '../mobx/StatusBarStore'
import CommonCell from '../component/CommonCell'
import {imageHeader, cameraImage, messageImage, cartImage} from '../img'
import Icon from 'react-native-vector-icons/FontAwesome'
import {deviceW, deviceH, Colors} from '../common/CommonDevice'
import FindView from './FindView';
import FollowView from './FollowView';
import BuyView from './BuyView'


// const {width, height} = Dimensions.get('window')


let data11 = ['1|2', '2|3']
export default class HomeView extends Component {
    // ÊûÑÈÄ†
    constructor(props) {
        super(props);
        // ÂàùÂßãÁä∂ÊÄÅ
        this.state = {
            rootTransform: 'none',
            selectedIndex: 'first'
        };
    }


    render() {
        return (
            <View style={styles.container}>
                <View style={styles.headerViewStyle}>
                    <TouchableHighlight onPress={()=>this.show('left')} topSeparator='full' underlayColor='transparent'>
                        <Icon name={imageHeader} size={30}/>
                    </TouchableHighlight>

                    <View style={{flexDirection:'row'}}>
                        {['ÂÖ≥Ê≥®', 'ÂèëÁé∞', 'Ë¥≠‰π∞'].map((item, index) => {
                            let selectedIndex = item == 'ÂÖ≥Ê≥®' ? 'first' : item == 'ÂèëÁé∞' ? 'second' : 'three'
                            return (
                                <TouchableOpacity onPress={()=>this.pushToDetail(selectedIndex)} key={index}
                                                  underlayColor='transparent'>

                                    <Text style={{
                                        color:selectedIndex == this.state.selectedIndex?'black':'gray',
                                        fontSize:18,
                                        marginRight:10,
                                        fontWeight:selectedIndex == this.state.selectedIndex?'bold':'normal'}}>{item}</Text>
                                    <View style={[styles.headerLineViewStyle,{
                                        borderBottomColor:selectedIndex == this.state.selectedIndex?'red':'transparent',
                                        borderBottomWidth:selectedIndex == this.state.selectedIndex?2:0,
                                    }]}>
                                    </View>
                                </TouchableOpacity>
                            )
                        })}

                    </View>
                    <Icon name={cameraImage} size={30}/>
                </View>

                {/*ÊêúÁ¥¢*/}
                <View style={styles.searchViewStyle}>
                    <TextInput
                        placeholder={'üîçÊêúÁ¥¢Á¨îËÆ∞ÔºåÂïÜÂìÅÂíåÁî®Êà∑'}
                        style={styles.textInputStyle}
                    />
                </View>

                {this.justToView()}


                <View style={styles.BottomViewStyle}>
                    <View
                        style={styles.viewStyle}>
                        <View
                            style={styles.circularViewStyle}>
                            <Icon name={messageImage} size={30}/>
                        </View>

                        <View style={styles.circularlineViewStyle}/>

                        <View
                            style={styles.circularViewStyle}>
                            <Icon name={cartImage} size={30}/>
                        </View>

                        <View style={styles.circularlineViewStyle}/>
                    </View>


                </View>
            </View>
        );
    }


    justToView() {
        switch (this.state.selectedIndex) {
            case 'first':
                return (
                    <FollowView/>
                );
                break;
            case 'second':
                return (
                    <FindView/>
                );
                break;
            case 'three':
                return (
                    <BuyView/>
                );
                break;

        }
    }

    //Â∑¶ËæπÁöÑÊäΩÂ±â
    @observer
    show(side) {
        Store.isHiddenStatusBar = true;
        let {rootTransform} = this.state;
        if (side == 'left') {
            this.drawer = Drawer.open(this.renderDrawerMenu(), side, rootTransform)
        }
    }


    renderDrawerMenu() {
        return (
            <View style={styles.drawerViewStyle}>
                <Image
                    source={{uri:'http://a.hiphotos.baidu.com/image/pic/item/f636afc379310a550352aa35be4543a9832610f8.jpg'}}
                    style={styles.drawerImageStyle}/>

                <View style={styles.nickNameViewStyle}>
                    <Text style={styles.textStyle}>ÁÆÄÁÆÄÂçïÂçï</Text>
                    <Text style={styles.rightRowStyle}> > </Text>
                </View>

                {['ÊàëÁöÑÂÖ≥Ê≥®|eye', 'ÊàëÁöÑÊî∂Ëóè|star-o', 'Ê∂àÊÅØ|comment-o'].map((item, index) => {
                    let varb = item.split("|")
                    return (
                        <CommonCell key={index} leftImage={`${varb[1]}`} title={`${varb[0]}`}/>
                    )
                })}

                <View style={styles.lineViewStyle}/>

                {['Ë¥≠Áâ©ËΩ¶|cart-plus', 'ËÆ¢Âçï|sticky-note', 'ËñØÂà∏|credit-card', 'ÂøÉÊÑøÂçï|tags', 'ÈªëÂç°‰ºöÂëò|diamond'].map((item, index) => {
                    let varb11 = item.split("|")
                    return (
                        <CommonCell key={index} leftImage={`${varb11[1]}`} title={`${varb11[0]}`}/>
                    )
                })}

                <View style={styles.lineViewStyle}/>
                <CommonCell leftImage={'gear'} title={'ËÆæÁΩÆ'}/>
            </View>
        )
    }


    pushToDetail(item) {
        this.setState({
            selectedIndex: item
        })
    }
}

const styles = StyleSheet.create({
    container: {
        flex: 1
    },

    headerViewStyle: {
        backgroundColor: 'white',
        height: 64,
        alignItems: 'center',
        flexDirection: 'row',
        justifyContent: 'space-between',
        paddingTop: 10,
        paddingLeft: 10,
        paddingRight: 10
    },

    drawerViewStyle: {
        width: deviceW - 100,
        paddingLeft: 30,
        paddingRight: 60
    },

    drawerImageStyle: {
        width: 70,
        height: 70,
        shadowOpacity: 1,
        marginTop: 30,
        borderRadius: 70 / 2,
        shadowColor: 'gray',
    },

    nickNameViewStyle: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        marginTop: 15,
        alignItems: 'center'
    },

    lineViewStyle: {
        borderBottomColor: 'gray',
        borderBottomWidth: 1,
        height: 1,
        width: deviceW - 190
    },

    textStyle: {
        fontSize: 20,
        fontWeight: 'bold'
    },

    rightRowStyle: {
        fontSize: 20,
        color: 'gray',
        marginBottom: 6
    },

    searchViewStyle: {
        width: deviceW,
        height: 60,
        backgroundColor: 'white',
        alignItems: 'center',
        justifyContent: 'center'
    },

    textInputStyle: {
        width: deviceW - 20,
        height: 40,
        borderRadius: 20,
        backgroundColor: Colors.ExplainColor,
        paddingLeft: 20
    },

    BottomViewStyle: {
        position: 'absolute',
        bottom: 0
    },

    circularlineViewStyle: {
        backgroundColor: 'red',
        width: 10,
        height: 10,
        borderRadius: 5,
        position: 'absolute',
        left: 70,
        bottom: 68
    },

    circularViewStyle: {
        width: 50,
        height: 50,
        borderRadius: 25,
        backgroundColor: 'gray',
        alignItems: 'center',
        justifyContent: 'center'
    },

    viewStyle: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        width: deviceW,
        alignItems: 'center',
        padding: 30
    },

    headerLineViewStyle: {
        alignItems: 'center',
        justifyContent: 'center',
        marginTop: 3,
        width: 38,
        borderRadius: 10
    },
});